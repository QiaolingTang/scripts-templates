apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: multiline-log-template
objects:
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: multiline-log
    labels:
      name: multiline-log
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        name: multiline-log
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          capabilities: Seamless Upgrades
          containerImage: quay.io/qiaolingtang/multiline-go:v0.2
          support: Qiaoling Tang
        creationTimestamp: null
        labels:
          name: multiline-log
      spec:
        containers:
        - args:
          - /run-go.sh
          command:
          - /bin/sh
          image: quay.io/qiaolingtang/multiline-go:v0.2
          imagePullPolicy: IfNotPresent
          name: multiline-log
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /multiline-log.go
            subPath: multiline-log.go
            name: config
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            name: multiline-log
          name: config
- apiVersion: v1
  data:
      multiline-log.go: "package main\n\nimport (\n\t\"fmt\"\n\t\"os\"\n\t\"time\"\n)\n\nfunc
        main() {\n\t//var test []string\n\n\t//fmt.Printf(\"the first string is: %s\",
        test[0])\n\n\tnewLog := `this is the first line\n\tthis is the second line\n\tthis
        is the third line\n\t`\n\tfor true {\n\t\tfmt.Fprint(os.Stderr, time.Now(), newLog)\n\t\ttime.Sleep(10
        * time.Second)\n\t}\n\n}\n"
  kind: ConfigMap
  metadata:
    name: multiline-log
